# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/arch/ps2/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/vice
pkglibdir = $(libdir)/vice
pkgincludedir = $(includedir)/vice
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = ee-none
ACLOCAL = ${SHELL} /data1/projektit/ps2/vice/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /data1/projektit/ps2/vice/missing --run tar
AR = ar
ARCH_DIR = $(top_builddir)/src/arch/ps2
ARCH_INCLUDES = -I$(top_srcdir)/src/arch/ps2/
ARCH_LIBS = $(top_builddir)/src/arch/ps2/libarch.a
AUTOCONF = ${SHELL} /data1/projektit/ps2/vice/missing --run autoconf
AUTOHEADER = ${SHELL} /data1/projektit/ps2/vice/missing --run autoheader
AUTOMAKE = ${SHELL} /data1/projektit/ps2/vice/missing --run automake-1.7
AWK = mawk
BEOS_COMPILE_FALSE = 
BEOS_COMPILE_TRUE = #
BINDIR = 
CATALOGS = 
CATOBJEXT = 
CC = ee-gcc
CCAS = $(CC)
CCASFLAGS = -xassembler-with-cpp -g -O2 -DPS2_EE -O3 -G0 -Wall -I/usr/local/ps2dev/ps2lib/common/include -I/usr/local/ps2dev/libcdvd/ee -I/usr/local/ps2dev/ee/ee/include -I/usr/local/ps2dev/ps2lib/ee/include
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -DPS2_EE -O3 -G0 -Wall -I/usr/local/ps2dev/ps2lib/common/include -I/usr/local/ps2dev/libcdvd/ee -I/usr/local/ps2dev/ee/ee/include -I/usr/local/ps2dev/ps2lib/ee/include
CPP = ee-gcc -E
CPPFLAGS = 
CXX = ee-g++
CXXCPP = ee-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -DPS2_EE -O3 -G0 -Wall -I/usr/local/ps2dev/ps2lib/common/include -I/usr/local/ps2dev/libcdvd/ee -I/usr/local/ps2dev/ee/ee/include -I/usr/local/ps2dev/ps2lib/ee/include -fno-exceptions
CYGPATH_W = echo
DATADIRNAME = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOS_OR_WIN_FALSE = 
DOS_OR_WIN_TRUE = #
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
FULLSCREEN_DRIVERS = 
GENCAT = 
GFXOUTPUT_DRIVERS = 
GMOFILES =  de.gmo fr.gmo it.gmo sv.gmo pl.gmo
GMSGFMT = :
GNOMEUI_FALSE = 
GNOMEUI_TRUE = #
HAVE_RAWDRIVE_FALSE = 
HAVE_RAWDRIVE_TRUE = #
HAVE_READLINE = 
HAVE_REALDEVICE_FALSE = 
HAVE_REALDEVICE_TRUE = #
HAVE_RESID_FALSE = #
HAVE_RESID_TRUE = 
HAVE_RS232_FALSE = 
HAVE_RS232_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = 
INTLDEPS = 
INTLLIBS = 
INTLOBJS = 
JOY_OBJS = 
LDFLAGS =  -nostartfiles -L/usr/local/ps2dev/ps2lib/ee/lib -L/usr/local/ps2dev/libcdvd/lib -T/usr/local/ps2dev/ps2lib/ee/startup/linkfile /usr/local/ps2dev/ps2lib/ee/startup/crt0.o
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS =  usleep$U.o
LIBS = -lm  -lgcc -lc -lmc -lpad -lcdvdfs -lkernel
LINKCC = $(CXX)
LN_S = ln -s
LTLIBOBJS =  usleep$U.lo
MAKEINFO = ${SHELL} /data1/projektit/ps2/vice/missing --run makeinfo
MKINSTALLDIRS = ./mkinstalldirs
MSDOS_COMPILE_FALSE = 
MSDOS_COMPILE_TRUE = #
MSGFMT = 
NEED_READLINE_FALSE = 
NEED_READLINE_TRUE = #
NLS_LOCALEDIR = 
OBJEXT = o
OS2_COMPILE_FALSE = 
OS2_COMPILE_TRUE = #
PACKAGE = vice
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
POFILES =  de.po fr.po it.po sv.po pl.po
POSUB = po
PS2_COMPILE_FALSE = #
PS2_COMPILE_TRUE = 
RANLIB = ee-ranlib
READLINE = 
RESID_DEP = libresid
RESID_DIR = resid
RESID_INCLUDES = -I$(top_builddir)/src/resid
RESID_LIBS = $(top_builddir)/src/resid/libresid.a
RISCOS_COMPILE_FALSE = 
RISCOS_COMPILE_TRUE = #
SET_MAKE = 
SHELL = /bin/sh
SOUND_AIX_OBJ = 
SOUND_DRIVERS =  soundps2.o
SOUND_HPUX_OBJ = 
SOUND_LIBS = 
SOUND_MIDAS_OBJ = 
SOUND_SDL_OBJ = 
SOUND_SGI_OBJ = 
SOUND_USS_OBJ = 
STRIP = ee-strip
UNIX_COMPILE_FALSE = 
UNIX_COMPILE_TRUE = #
USE_INCLUDED_LIBINTL = 
USE_MIDAS_SOUND_FALSE = 
USE_MIDAS_SOUND_TRUE = #
USE_NLS = no
VERSION = 1.14
WIN32_COMPILE_FALSE = 
WIN32_COMPILE_TRUE = #
WINDRES = 
X128_WINRES = 
X64_WINRES = 
XCBM2_WINRES = 
XGETTEXT = :
XPET_WINRES = 
XPLUS4_WINRES = 
XVIC_WINRES = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
YACC = bison -y
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_RANLIB = 
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
artsc_config = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux
build_alias = 
build_cpu = i686
build_os = linux
build_vendor = pc
c1541_LDFLAGS =  -nostartfiles -L/usr/local/ps2dev/ps2lib/ee/lib -L/usr/local/ps2dev/libcdvd/lib -T/usr/local/ps2dev/ps2lib/ee/startup/linkfile /usr/local/ps2dev/ps2lib/ee/startup/crt0.o
cxx = c++
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = ee-none
host_alias = ee
host_cpu = ee-none
host_os = ee-none
host_vendor = ee-none
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /data1/projektit/ps2/vice/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
petcat_LDFLAGS =  -nostartfiles -L/usr/local/ps2dev/ps2lib/ee/lib -L/usr/local/ps2dev/libcdvd/lib -T/usr/local/ps2dev/ps2lib/ee/startup/linkfile /usr/local/ps2dev/ps2lib/ee/startup/crt0.o
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sdl_config = 
sharedstatedir = ${prefix}/com
subdirs =  src/resid
sysconfdir = ${prefix}/etc
target_alias = 
x128_LDFLAGS =  -nostartfiles -L/usr/local/ps2dev/ps2lib/ee/lib -L/usr/local/ps2dev/libcdvd/lib -T/usr/local/ps2dev/ps2lib/ee/startup/linkfile /usr/local/ps2dev/ps2lib/ee/startup/crt0.o
x64_LDFLAGS =  -nostartfiles -L/usr/local/ps2dev/ps2lib/ee/lib -L/usr/local/ps2dev/libcdvd/lib -T/usr/local/ps2dev/ps2lib/ee/startup/linkfile /usr/local/ps2dev/ps2lib/ee/startup/crt0.o
xcbm2_LDFLAGS =  -nostartfiles -L/usr/local/ps2dev/ps2lib/ee/lib -L/usr/local/ps2dev/libcdvd/lib -T/usr/local/ps2dev/ps2lib/ee/startup/linkfile /usr/local/ps2dev/ps2lib/ee/startup/crt0.o
xpet_LDFLAGS =  -nostartfiles -L/usr/local/ps2dev/ps2lib/ee/lib -L/usr/local/ps2dev/libcdvd/lib -T/usr/local/ps2dev/ps2lib/ee/startup/linkfile /usr/local/ps2dev/ps2lib/ee/startup/crt0.o
xplus4_LDFLAGS =  -nostartfiles -L/usr/local/ps2dev/ps2lib/ee/lib -L/usr/local/ps2dev/libcdvd/lib -T/usr/local/ps2dev/ps2lib/ee/startup/linkfile /usr/local/ps2dev/ps2lib/ee/startup/crt0.o
xvic_LDFLAGS =  -nostartfiles -L/usr/local/ps2dev/ps2lib/ee/lib -L/usr/local/ps2dev/libcdvd/lib -T/usr/local/ps2dev/ps2lib/ee/startup/linkfile /usr/local/ps2dev/ps2lib/ee/startup/crt0.o

INCLUDES = \
	-I$(top_srcdir)/src/arch/ps2/ \
	-I$(top_builddir)/src \
	-I$(top_srcdir)/src \
	-I$(top_srcdir)/src/drive \
	-I$(top_srcdir)/src/vdrive \
	-I$(top_srcdir)/src/raster \
	-I$(top_srcdir)/src/c64 \
	-I$(top_srcdir)/src/c128 \
	-I$(top_srcdir)/src/vic20 \
	-I$(top_srcdir)/src/pet \
	-I$(top_srcdir)/src/sid


noinst_LIBRARIES = libarch.a

libarch_a_SOURCES = \
	archdep.c \
	archdep.h \
	c128ui.c \
	c64ui.c \
	cbm2ui.c \
	cbmcharsets.c \
	cbmcharsets.h \
	console.c \
	joy.c \
	joy.h \
	kbd.c \
	kbd.h \
	menudefs.c \
	menudefs.h \
	mousedrv.c \
	mousedrv.h \
	ps2main.c \
	petui.c \
	plus4ui.c \
	types.h \
	ui.c \
	ui.h \
	uiattach.h \
	uiattach.c \
	uic64cart.c \
	uic64cart.h \
	uicmdline.c \
	uidrive.c \
	uidrive.h \
	uimon.c \
	uiperipherial.c \
	uiperipherial.h \
	uiprinter.c \
	uiprinter.h \
	uireu.c \
	uireu.h \
	uisid.c \
	uisid.h \
	uisnapshot.c \
	uisnapshot.h \
	uisound.c \
	uisound.h \
	vic20ui.c \
	video.c \
	videoarch.h \
	vsidui.c \
	vsync.c \
	gs.c \
	g2.c \
	dma_asm.s \
	gs_asm.s \
        hw.s \
        ps2_asm.s \
	loadmodule.c \
	ps2kbd.c \
	sjpcm_rpc.c \
	support.c \
	osdmsg.c \
	f_arial.c \
	f_arial7.c \
	bitmap.c \
	libkbd.c \
	vkeyboard.c \
	gr_keyboard.c \
	gr_button1.c \
	gr_button2.c \
	gr_button3.c \
	gr_button4.c \
	gr_button5.c \
	gr_button6.c \
	gr_button7.c \
	gr_pointer.c \
	gr_c128kbd.c \
	menu.c \
	fileexp.c \
	infowin.c \
	cdvd_vsync.c \
	pad.c \
	gr_plus4kbd.c \
	plus4kbd.c \
	c128kbd.c \
	c64kbd.c


EXTRA_DIST = 
subdir = src/arch/ps2
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libarch_a_AR = $(AR) cru
libarch_a_LIBADD =
am_libarch_a_OBJECTS = archdep.$(OBJEXT) c128ui.$(OBJEXT) \
	c64ui.$(OBJEXT) cbm2ui.$(OBJEXT) cbmcharsets.$(OBJEXT) \
	console.$(OBJEXT) joy.$(OBJEXT) kbd.$(OBJEXT) \
	menudefs.$(OBJEXT) mousedrv.$(OBJEXT) ps2main.$(OBJEXT) \
	petui.$(OBJEXT) plus4ui.$(OBJEXT) ui.$(OBJEXT) \
	uiattach.$(OBJEXT) uic64cart.$(OBJEXT) uicmdline.$(OBJEXT) \
	uidrive.$(OBJEXT) uimon.$(OBJEXT) uiperipherial.$(OBJEXT) \
	uiprinter.$(OBJEXT) uireu.$(OBJEXT) uisid.$(OBJEXT) \
	uisnapshot.$(OBJEXT) uisound.$(OBJEXT) vic20ui.$(OBJEXT) \
	video.$(OBJEXT) vsidui.$(OBJEXT) vsync.$(OBJEXT) gs.$(OBJEXT) \
	g2.$(OBJEXT) dma_asm.$(OBJEXT) gs_asm.$(OBJEXT) hw.$(OBJEXT) \
	ps2_asm.$(OBJEXT) loadmodule.$(OBJEXT) ps2kbd.$(OBJEXT) \
	sjpcm_rpc.$(OBJEXT) support.$(OBJEXT) osdmsg.$(OBJEXT) \
	f_arial.$(OBJEXT) f_arial7.$(OBJEXT) bitmap.$(OBJEXT) \
	libkbd.$(OBJEXT) vkeyboard.$(OBJEXT) gr_keyboard.$(OBJEXT) \
	gr_button1.$(OBJEXT) gr_button2.$(OBJEXT) gr_button3.$(OBJEXT) \
	gr_button4.$(OBJEXT) gr_button5.$(OBJEXT) gr_button6.$(OBJEXT) \
	gr_button7.$(OBJEXT) gr_pointer.$(OBJEXT) gr_c128kbd.$(OBJEXT) \
	menu.$(OBJEXT) fileexp.$(OBJEXT) infowin.$(OBJEXT) \
	cdvd_vsync.$(OBJEXT) pad.$(OBJEXT) gr_plus4kbd.$(OBJEXT) \
	plus4kbd.$(OBJEXT) c128kbd.$(OBJEXT) c64kbd.$(OBJEXT)
libarch_a_OBJECTS = $(am_libarch_a_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/archdep.Po ./$(DEPDIR)/bitmap.Po \
	./$(DEPDIR)/c128kbd.Po ./$(DEPDIR)/c128ui.Po \
	./$(DEPDIR)/c64kbd.Po ./$(DEPDIR)/c64ui.Po \
	./$(DEPDIR)/cbm2ui.Po ./$(DEPDIR)/cbmcharsets.Po \
	./$(DEPDIR)/cdvd_vsync.Po ./$(DEPDIR)/console.Po \
	./$(DEPDIR)/f_arial.Po ./$(DEPDIR)/f_arial7.Po \
	./$(DEPDIR)/fileexp.Po ./$(DEPDIR)/g2.Po \
	./$(DEPDIR)/gr_button1.Po ./$(DEPDIR)/gr_button2.Po \
	./$(DEPDIR)/gr_button3.Po ./$(DEPDIR)/gr_button4.Po \
	./$(DEPDIR)/gr_button5.Po ./$(DEPDIR)/gr_button6.Po \
	./$(DEPDIR)/gr_button7.Po ./$(DEPDIR)/gr_c128kbd.Po \
	./$(DEPDIR)/gr_keyboard.Po \
	./$(DEPDIR)/gr_plus4kbd.Po \
	./$(DEPDIR)/gr_pointer.Po ./$(DEPDIR)/gs.Po \
	./$(DEPDIR)/infowin.Po ./$(DEPDIR)/joy.Po \
	./$(DEPDIR)/kbd.Po ./$(DEPDIR)/libkbd.Po \
	./$(DEPDIR)/loadmodule.Po ./$(DEPDIR)/menu.Po \
	./$(DEPDIR)/menudefs.Po ./$(DEPDIR)/mousedrv.Po \
	./$(DEPDIR)/osdmsg.Po ./$(DEPDIR)/pad.Po \
	./$(DEPDIR)/petui.Po ./$(DEPDIR)/plus4kbd.Po \
	./$(DEPDIR)/plus4ui.Po ./$(DEPDIR)/ps2kbd.Po \
	./$(DEPDIR)/ps2main.Po ./$(DEPDIR)/sjpcm_rpc.Po \
	./$(DEPDIR)/support.Po ./$(DEPDIR)/ui.Po \
	./$(DEPDIR)/uiattach.Po ./$(DEPDIR)/uic64cart.Po \
	./$(DEPDIR)/uicmdline.Po ./$(DEPDIR)/uidrive.Po \
	./$(DEPDIR)/uimon.Po ./$(DEPDIR)/uiperipherial.Po \
	./$(DEPDIR)/uiprinter.Po ./$(DEPDIR)/uireu.Po \
	./$(DEPDIR)/uisid.Po ./$(DEPDIR)/uisnapshot.Po \
	./$(DEPDIR)/uisound.Po ./$(DEPDIR)/vic20ui.Po \
	./$(DEPDIR)/video.Po ./$(DEPDIR)/vkeyboard.Po \
	./$(DEPDIR)/vsidui.Po ./$(DEPDIR)/vsync.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
DIST_SOURCES = $(libarch_a_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
SOURCES = $(libarch_a_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj .s
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/arch/ps2/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libarch.a: $(libarch_a_OBJECTS) $(libarch_a_DEPENDENCIES) 
	-rm -f libarch.a
	$(libarch_a_AR) libarch.a $(libarch_a_OBJECTS) $(libarch_a_LIBADD)
	$(RANLIB) libarch.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/archdep.Po
include ./$(DEPDIR)/bitmap.Po
include ./$(DEPDIR)/c128kbd.Po
include ./$(DEPDIR)/c128ui.Po
include ./$(DEPDIR)/c64kbd.Po
include ./$(DEPDIR)/c64ui.Po
include ./$(DEPDIR)/cbm2ui.Po
include ./$(DEPDIR)/cbmcharsets.Po
include ./$(DEPDIR)/cdvd_vsync.Po
include ./$(DEPDIR)/console.Po
include ./$(DEPDIR)/f_arial.Po
include ./$(DEPDIR)/f_arial7.Po
include ./$(DEPDIR)/fileexp.Po
include ./$(DEPDIR)/g2.Po
include ./$(DEPDIR)/gr_button1.Po
include ./$(DEPDIR)/gr_button2.Po
include ./$(DEPDIR)/gr_button3.Po
include ./$(DEPDIR)/gr_button4.Po
include ./$(DEPDIR)/gr_button5.Po
include ./$(DEPDIR)/gr_button6.Po
include ./$(DEPDIR)/gr_button7.Po
include ./$(DEPDIR)/gr_c128kbd.Po
include ./$(DEPDIR)/gr_keyboard.Po
include ./$(DEPDIR)/gr_plus4kbd.Po
include ./$(DEPDIR)/gr_pointer.Po
include ./$(DEPDIR)/gs.Po
include ./$(DEPDIR)/infowin.Po
include ./$(DEPDIR)/joy.Po
include ./$(DEPDIR)/kbd.Po
include ./$(DEPDIR)/libkbd.Po
include ./$(DEPDIR)/loadmodule.Po
include ./$(DEPDIR)/menu.Po
include ./$(DEPDIR)/menudefs.Po
include ./$(DEPDIR)/mousedrv.Po
include ./$(DEPDIR)/osdmsg.Po
include ./$(DEPDIR)/pad.Po
include ./$(DEPDIR)/petui.Po
include ./$(DEPDIR)/plus4kbd.Po
include ./$(DEPDIR)/plus4ui.Po
include ./$(DEPDIR)/ps2kbd.Po
include ./$(DEPDIR)/ps2main.Po
include ./$(DEPDIR)/sjpcm_rpc.Po
include ./$(DEPDIR)/support.Po
include ./$(DEPDIR)/ui.Po
include ./$(DEPDIR)/uiattach.Po
include ./$(DEPDIR)/uic64cart.Po
include ./$(DEPDIR)/uicmdline.Po
include ./$(DEPDIR)/uidrive.Po
include ./$(DEPDIR)/uimon.Po
include ./$(DEPDIR)/uiperipherial.Po
include ./$(DEPDIR)/uiprinter.Po
include ./$(DEPDIR)/uireu.Po
include ./$(DEPDIR)/uisid.Po
include ./$(DEPDIR)/uisnapshot.Po
include ./$(DEPDIR)/uisound.Po
include ./$(DEPDIR)/vic20ui.Po
include ./$(DEPDIR)/video.Po
include ./$(DEPDIR)/vkeyboard.Po
include ./$(DEPDIR)/vsidui.Po
include ./$(DEPDIR)/vsync.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.s.o:
	$(CCASCOMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.s.obj:
	$(CCASCOMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)

installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
